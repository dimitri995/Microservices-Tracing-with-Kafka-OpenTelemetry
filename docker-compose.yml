version: '3.8'
services:
  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:latest
    restart: always
    networks:
      - traceability
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres:/data/postgres
      - ./init-scripts:/docker-entrypoint-initdb.d

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: [ "--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1889:1888"   # pprof extension
      # - "8888:8888"   # Prometheus metrics exposed by the collector
      # - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "55679:55679" # zpages extension
    networks:
      - traceability


  # Uptrace
  uptrace:
    image: uptrace/uptrace:1.7.7
    restart: on-failure
    volumes:
      - ./uptrace.yml:/etc/uptrace/uptrace.yml
    ports:
      - '14317:14317'
      - '14318:14318'
    depends_on:
      - clickhouse
      - postgres
    networks:
      - traceability

  clickhouse:
    image: clickhouse/clickhouse-server:24.7
    restart: on-failure
    environment:
      CLICKHOUSE_DB: uptrace
    healthcheck:
      test: [ 'CMD', 'wget', '--spider', '-q', 'localhost:8123/ping' ]
      interval: 1s
      timeout: 1s
      retries: 30
    volumes:
      - ch_data2:/var/lib/clickhouse
    ports:
      - '8123:8123'
      - '9000:9000'
    networks:
      - traceability

networks:
  traceability:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  ch_data2: